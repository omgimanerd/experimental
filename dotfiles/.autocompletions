#/bin/bash
#
# Needs to be added to .bashrc to work:
# if [ -f ~/.autocompletions ]; then
#   . ~/.autocompletions
# fi

_generate_completions() {
  # COMP_WORDS is an array variable consisting of the individual words on the
  # current command line. The last word is the completion argument for the cd
  # command. Isolate it and strip off trailing slashes.
  local PATH_ARG="${COMP_WORDS[-1]%%*(/)}"
  # Strip off ./ if it starts with that.
  PATH_ARG="${PATH_ARG#./}"
  # Remove all instances of the wildcard token.
  PATH_ARG="${PATH_ARG//\*/}"

  # Split the completion argument by the forward slash delimiter into.
  IFS="/" read -ra TOKENS <<< $PATH_ARG

  # Iterate through the tokens to build paths for all subdirectories that match
  # the path glob. Start the directory search in the current directory.
  local CURRENT_PATHS=(".")
  local TOKEN
  for TOKEN in "${TOKENS[@]}"; do
    # Store all the new subdirectories that match the current token.
    local NEW_PATHS=()
    # Go through every path and attempt to find glob matches using the current
    # token.
    local CURRENT_PATH
    for CURRENT_PATH in "${CURRENT_PATHS[@]}"; do
      # Go through every subdirectory match using the current path and token.
      for MATCH in "$CURRENT_PATH"/"$TOKEN"*; do
        # If the path exists and is a directory, store it.
        if [[ -e "$MATCH" && -d "$MATCH" ]]; then
          # Remove the ./ prefix from the match.
          NEW_PATHS+=(${MATCH#./})
        fi
      done
    done
    # Write the new path candidates back to CURRENT_PATHS for the next token.
    CURRENT_PATHS=("${NEW_PATHS[@]}")
  done

  # When we are done forming all the paths, append a '/' to every entry and
  # write them out to COMPREPLY.
  COMPREPLY=()
  for CURRENT_PATH in "${CURRENT_PATHS[@]}"; do
    COMPREPLY+=("${CURRENT_PATH}/")
  done
}

# Allows for all entries in COMPREPLY to be shown when we press TAB
set show-all-if-ambiguous on

# Do not set -o plusdirs or the result will be duplicated if there is a single
# directory match.
complete -F _generate_completions -o dirnames -o nospace cd
